<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Pimcore\DataObject\Import\Service' shared autowired service.

return $this->services['Pimcore\DataObject\Import\Service'] = new \Pimcore\DataObject\Import\Service(${($_ = isset($this->services['doctrine.dbal.default_connection']) ? $this->services['doctrine.dbal.default_connection'] : $this->getDoctrine_Dbal_DefaultConnectionService()) && false ?: '_'}, new \Symfony\Component\DependencyInjection\ServiceLocator(array('code' => function () {
    return ${($_ = isset($this->services['Pimcore\DataObject\Import\Resolver\Code']) ? $this->services['Pimcore\DataObject\Import\Resolver\Code'] : $this->load('getCodeService.php')) && false ?: '_'};
}, 'filename' => function () {
    return ${($_ = isset($this->services['Pimcore\DataObject\Import\Resolver\Filename']) ? $this->services['Pimcore\DataObject\Import\Resolver\Filename'] : $this->load('getFilenameService.php')) && false ?: '_'};
}, 'fullpath' => function () {
    return ${($_ = isset($this->services['Pimcore\DataObject\Import\Resolver\Fullpath']) ? $this->services['Pimcore\DataObject\Import\Resolver\Fullpath'] : $this->load('getFullpathService.php')) && false ?: '_'};
}, 'getBy' => function () {
    return ${($_ = isset($this->services['Pimcore\DataObject\Import\Resolver\GetBy']) ? $this->services['Pimcore\DataObject\Import\Resolver\GetBy'] : $this->load('getGetByService.php')) && false ?: '_'};
}, 'id' => function () {
    return ${($_ = isset($this->services['Pimcore\DataObject\Import\Resolver\Id']) ? $this->services['Pimcore\DataObject\Import\Resolver\Id'] : $this->services['Pimcore\DataObject\Import\Resolver\Id'] = new \Pimcore\DataObject\Import\Resolver\Id()) && false ?: '_'};
})), new \Symfony\Component\DependencyInjection\ServiceLocator(array('Base64' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.base64']) ? $this->services['pimcore.data_object.import.operator.factory.base64'] : $this->services['pimcore.data_object.import.operator.factory.base64'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Base64')) && false ?: '_'};
}, 'Iterator' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.iterator']) ? $this->services['pimcore.data_object.import.operator.factory.iterator'] : $this->services['pimcore.data_object.import.operator.factory.iterator'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Iterator')) && false ?: '_'};
}, 'LocaleSwitcher' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.locale_switcher']) ? $this->services['pimcore.data_object.import.operator.factory.locale_switcher'] : $this->load('getPimcore_DataObject_Import_Operator_Factory_LocaleSwitcherService.php')) && false ?: '_'};
}, 'ObjectBrickSetter' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.object_brick_setter']) ? $this->services['pimcore.data_object.import.operator.factory.object_brick_setter'] : $this->load('getPimcore_DataObject_Import_Operator_Factory_ObjectBrickSetterService.php')) && false ?: '_'};
}, 'PHPCode' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.php_code']) ? $this->services['pimcore.data_object.import.operator.factory.php_code'] : $this->services['pimcore.data_object.import.operator.factory.php_code'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\PHPCode')) && false ?: '_'};
}, 'Published' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.published']) ? $this->services['pimcore.data_object.import.operator.factory.published'] : $this->services['pimcore.data_object.import.operator.factory.published'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Published')) && false ?: '_'};
}, 'Splitter' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.splitter']) ? $this->services['pimcore.data_object.import.operator.factory.splitter'] : $this->services['pimcore.data_object.import.operator.factory.splitter'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Splitter')) && false ?: '_'};
}, 'Unserialize' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.operator.factory.unserialize']) ? $this->services['pimcore.data_object.import.operator.factory.unserialize'] : $this->services['pimcore.data_object.import.operator.factory.unserialize'] = new \Pimcore\DataObject\Import\ColumnConfig\Operator\Factory\DefaultOperatorFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Operator\\Unserialize')) && false ?: '_'};
})), new \Symfony\Component\DependencyInjection\ServiceLocator(array('DefaultValue' => function () {
    return ${($_ = isset($this->services['pimcore.data_object.import.value.factory.default']) ? $this->services['pimcore.data_object.import.value.factory.default'] : $this->services['pimcore.data_object.import.value.factory.default'] = new \Pimcore\DataObject\Import\ColumnConfig\Value\Factory\DefaultValueFactory('Pimcore\\DataObject\\Import\\ColumnConfig\\Value\\DefaultValue')) && false ?: '_'};
})));
