<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.firewall.map.context.webservice' shared service.

return $this->services['security.firewall.map.context.webservice'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['security.channel_listener']) ? $this->services['security.channel_listener'] : $this->load('getSecurity_ChannelListenerService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['security.authentication.listener.guard.webservice']) ? $this->services['security.authentication.listener.guard.webservice'] : $this->load('getSecurity_Authentication_Listener_Guard_WebserviceService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['security.access_listener']) ? $this->services['security.access_listener'] : $this->load('getSecurity_AccessListenerService.php')) && false ?: '_'};
}, 3), new \Symfony\Component\Security\Http\Firewall\ExceptionListener(${($_ = isset($this->services['security.token_storage']) ? $this->services['security.token_storage'] : $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage()) && false ?: '_'}, ${($_ = isset($this->services['security.authentication.trust_resolver']) ? $this->services['security.authentication.trust_resolver'] : $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken')) && false ?: '_'}, ${($_ = isset($this->services['security.http_utils']) ? $this->services['security.http_utils'] : $this->load('getSecurity_HttpUtilsService.php')) && false ?: '_'}, 'webservice', ${($_ = isset($this->services['pimcore_admin.security.webservice_authenticator']) ? $this->services['pimcore_admin.security.webservice_authenticator'] : $this->load('getPimcoreAdmin_Security_WebserviceAuthenticatorService.php')) && false ?: '_'}, NULL, NULL, ${($_ = isset($this->services['monolog.logger.security']) ? $this->services['monolog.logger.security'] : $this->getMonolog_Logger_SecurityService()) && false ?: '_'}, true), NULL, new \Symfony\Bundle\SecurityBundle\Security\FirewallConfig('webservice', 'security.user_checker', 'security.request_matcher.atqb9bo', true, true, 'Pimcore\\Bundle\\AdminBundle\\Security\\User\\UserProvider', NULL, 'Pimcore\\Bundle\\AdminBundle\\Security\\Guard\\WebserviceAuthenticator', NULL, NULL, array(0 => 'guard'), NULL));
